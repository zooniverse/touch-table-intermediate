{"version":3,"sources":["webpack:///./src/components/CallToAction.js","webpack:///./src/components/divider.js","webpack:///./src/components/general.js","webpack:///./src/components/recent.js","webpack:///./src/components/data.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/images/yellow-logo.png"],"names":["CallToAction","react_default","a","createElement","className","callToActionStyles","callToAction","href","query","Divider","_ref","data","gatsby_browser_entry","render","dividerStyles","divider","gatsby_image_default","fixed","file","childImageSharp","_354251310","General","generalStyles","general","column","_3422308621","placeholder","Recent","recentStyles","recent","subjects","map","image","i","key","subject","Data","dataStyles","stats","buttons","IndexPage","layout","style","background","padding","position","alt","src","yellowLogo","left","top","margin","star","marginTop","spiral","right","components_CallToAction","zooniverse","bottom","components_data","_1429977378","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","headerStyles","header","Helmet","upperDiv","logo","borderLeft","lowerDiv","centeredDiv","_3251209783","defaultProps","Layout","footerStyles","footer","_1776667663","Fragment","site","siteMetadata","title","paddingTop","_755544856","node","p"],"mappings":"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","file":"component---src-pages-index-js-e2217970f5d709b421ca.js","sourcesContent":["import React from \"react\"\nimport callToActionStyles from \"./callToAction.module.css\"\n\nconst CallToAction = () => (\n  <div className={callToActionStyles.callToAction}>\n    <h1>Hey there, fellow scientist!</h1>\n    <h2>\n      Thanks for participating in real scientific research at the Adler Planetarium!\n    </h2>\n    <span>\n      You can keep science-ing on your mobile device or at home with\n      Galaxy Zoo, a project from Zooniverse. Check it out!\n    </span>\n    <div>\n      <button className=\"solid-button\"><a href='https://www.galaxyzoo.org'>Galaxyzoo.org</a></button>\n      <button className=\"hollow-button\"><a href='https://www.zoonvierse.org'>Share this project</a></button>\n    </div>\n  </div>\n)\n\nexport default CallToAction;\n","import React from \"react\"\nimport dividerStyles from \"./divider.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Divider = ({ data }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <div className={dividerStyles.divider}>\n          <Img fixed={data.file.childImageSharp.fixed}/>\n        </div>\n      )}\n    />\n  );\n}\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"divider.png\" }) {\n      childImageSharp {\n        fixed(width: 149) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default Divider;\n","import React from \"react\"\nimport generalStyles from \"./general.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst General = ({ data }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <div className={generalStyles.general}>\n          <h3 className='sub-header'>What is Zooniverse?</h3>\n          <span className='descriptor'>\n            Zooniverse is the world's largest people-powered research\n            platform. What does that mean? Lorem ipsum dolor sit.\n          </span>\n          <Img fixed={data.file.childImageSharp.fixed}/>\n          <div className={generalStyles.column}>\n            <span>\n              Participate in tons of projects just like this one in topics ranging\n              from astronomy to zoology.\n            </span><br/>\n            <span>\n              Scientist need your help to process all shapes of galaxies or\n              identifying animal species. By answering a few questions, you'll\n              make a big difference in the scientific community!\n            </span>\n          </div>\n          <button className='hollow-button'>\n            <a href='https://www.zooniverse.org'>zooniverse.org</a>\n          </button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"icons.png\" }) {\n      childImageSharp {\n        fixed(width: 300) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default General;\n","import React from \"react\"\nimport recentStyles from \"./recent.module.css\"\n\nconst placeholder = [\"SBJ.26440667\", \"SBJ.26440667\", \"SBJ.26440667\"];\n\nconst Recent = () => (\n    <div className={recentStyles.recent}>\n      <h3 className='sub-header'>Recent galaxies</h3>\n      <span className='descriptor'>\n        People just like you have been classifying galaxies from U!Scientist at\n        the Adler as well as online on Galaxy Zoo.\n      </span>\n      <div className={recentStyles.subjects}>\n        {placeholder.map((image, i) =>\n            <div key={i} className={recentStyles.subject}>\n              <div />\n              <span>{image}</span>\n            </div>\n        )}\n      </div>\n      <button className='hollow-button'>\n        <a href='https://www.galaxyzoo.org'>see more at galaxyzoo.org</a>\n      </button>\n    </div>\n);\n\nexport default Recent;\n","import React from \"react\"\nimport dataStyles from \"./data.module.css\"\n\nconst Data = () => (\n  <div className={dataStyles.data}>\n    <h3 className='sub-header'>Even more data</h3>\n    <span className='descriptor'>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n      tempor incididunt ut labore et dolore magna alique. Ut\n    </span>\n    <div className={dataStyles.stats}>\n      <div>\n        <h5>total classifications today</h5>\n        <span>42,629</span>\n        <h5>galaxies retired</h5>\n        <span>20</span>\n        <h5>u!scientist classifications today</h5>\n        <span>12,054</span>\n      </div>\n      <div>\n        <h5>Countries participating today</h5>\n      </div>\n    </div>\n    <div className={dataStyles.buttons}>\n      <button className='hollow-button'>\n        <a href='https://www.galaxyzoo.org'>galaxyzoo.org</a>\n      </button>\n      <button className='hollow-button'>\n        <a href='https://www.zooniverse.org'>share this project</a>\n      </button>\n    </div>\n  </div>\n)\n\nexport default Data;\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport CallToAction from \"../components/CallToAction\"\nimport Divider from \"../components/divider\"\nimport General from \"../components/general\"\nimport Recent from \"../components/recent\"\nimport Data from \"../components/data\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport yellowLogo from \"../images/yellow-logo.png\";\n\nconst IndexPage = ({ data }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <Layout>\n          <div style={{ background: `#001133`, padding: `15% 15% 5% 15%`, position: `relative` }}>\n            <img alt=\"Large U!Scientist Logo\" className=\"large-logo\" src={yellowLogo} />\n            <Img\n              fixed={data.image.childImageSharp.fixed}\n              style={{ position: `absolute`, left: 0, top: 0, margin: `12% 0 0 10%` }}\n            />\n            <Img\n              fixed={data.star.childImageSharp.fixed}\n              style={{ position: `absolute`, left: 0, marginTop: `12%` }}\n            />\n            <Img\n              fixed={data.spiral.childImageSharp.fixed}\n              style={{ position: `absolute`, right: 0, marginTop: `80%` }}\n            />\n            <CallToAction />\n            <Divider />\n            <Recent />\n            <Divider />\n            <Img\n              fixed={data.zooniverse.childImageSharp.fixed}\n              style={{ position: `absolute`, left: 0, bottom: 0, margin: `0 0 20% 5%` }}\n            />\n            <Data />\n            <Divider />\n            <General />\n            <Img\n              fixed={data.image.childImageSharp.fixed}\n              style={{ position: `absolute`, right: 0, bottom: 0, margin: `0 10% 2% 0` }}\n            />\n          </div>\n        </Layout>\n      )}\n    />\n  );\n}\n\nexport const query = graphql`\n  query {\n    image: file(relativePath: { eq: \"yellow-star.png\" }) {\n      childImageSharp {\n        fixed(height: 44) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    star: file(relativePath: { eq: \"background-star.png\" }) {\n      childImageSharp {\n        fixed(height: 350) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    spiral: file(relativePath: { eq: \"background-spiral.png\" }) {\n      childImageSharp {\n        fixed(height: 500) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    zooniverse: file(relativePath: { eq: \"zooniverse-logo-white.png\" }) {\n      childImageSharp {\n        fixed(height: 360) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport headerStyles from \"./header.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\n\nconst Header = ({ siteTitle }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <header className={headerStyles.header}>\n          <Helmet>\n            <title>{siteTitle}</title> />\n          </Helmet>\n          <div>\n            <div className={headerStyles.upperDiv}>\n              <Img style={{ margin: `auto 0.5rem` }} fixed={data.logo.childImageSharp.fixed} />\n              <div style={{ borderLeft: `1px solid white` }}/>\n              <Img style={{ margin: `auto 0.5rem` }} fixed={data.image.childImageSharp.fixed} />\n            </div>\n            <div className={headerStyles.lowerDiv}>\n            </div>\n          </div>\n          <div className={headerStyles.centeredDiv}>\n            <Img style={{ margin: `auto` }} fixed={data.file.childImageSharp.fixed} />\n          </div>\n        </header>\n      )}\n    />\n  );\n};\n\n\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"uscientist-logo.png\" }) {\n      childImageSharp {\n        fixed(width: 120) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    image: file(relativePath: { eq: \"zooniverse-word-white.png\" }) {\n      childImageSharp {\n        fixed(height: 10) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    logo: file(relativePath: { eq: \"nsf.png\" }) {\n      childImageSharp {\n        fixed(height: 15) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport footerStyles from \"./footer.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Layout = ({ data }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <div className={footerStyles.footer}>\n          <Img fixed={data.file.childImageSharp.fixed} />\n          <span>U!Scientist is made possible by a grant from the national science foundation.</span>\n          <span>The Zoonivese is a collaboration between the Adler Planetarium, The University of Oxford, The University of Minnesota, and the broader Citizen Science Alliance.</span>\n          <a href=\"https://zooniverse.org\">zooniverse.org</a>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"zooniverse-logo.png\" }) {\n      childImageSharp {\n        fixed(width: 200) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            background: '#001133',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/yellow-logo-bed542c187fab067059752da8a19c82f.png\";"],"sourceRoot":""}