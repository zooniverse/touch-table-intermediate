{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","className","headerStyles","header","Helmet","upperDiv","gatsby_image_default","style","margin","fixed","logo","childImageSharp","borderLeft","image","lowerDiv","centeredDiv","file","_3251209783","defaultProps","Layout","footerStyles","footer","logos","nsf","separator","zooniverse","gatsby_plugin_google_analytics","href","_3366652445","Fragment","site","siteMetadata","background","paddingTop","_755544856","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJV,EAAAY,EAAAV,EAAA,sBAAAW,IAAA,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAW,EAAAd,EAAA,GAAAe,EAAAf,EAAAK,EAAAS,GAAAE,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAAK,EAAAW,GAAAhB,EAAAY,EAAAV,EAAA,sBAAAe,EAAAR,IAAAT,EAAA,SAYMkB,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBjB,EAAAK,EAAAC,cAACQ,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDpB,EAAAK,EAAAC,cAAA,uCA4BfG,EAAYe,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kLCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEvB,IAAMT,cAAcoC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,6tNClBTY,EAAS,SAAAX,GAAmB,IAAhBY,EAAgBZ,EAAhBY,UAChB,OACEC,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACE7B,MAAOA,EACPC,OAAQ,SAAAF,GAAI,OACV6B,EAAA5C,EAAAC,cAAA,UAAQ6C,UAAWC,IAAaC,QAC9BJ,EAAA5C,EAAAC,cAACgD,EAAA,OAAD,KACEL,EAAA5C,EAAAC,cAAA,aAAQ0C,GADV,OAGAC,EAAA5C,EAAAC,cAAA,WACE2C,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWC,IAAaG,UAC3BN,EAAA5C,EAAAC,cAACkD,EAAAnD,EAAD,CAAKoD,MAAO,CAAEC,OAAM,eAAmBC,MAAOvC,EAAKwC,KAAKC,gBAAgBF,QACxEV,EAAA5C,EAAAC,cAAA,OAAKmD,MAAO,CAAEK,WAAU,qBACxBb,EAAA5C,EAAAC,cAACkD,EAAAnD,EAAD,CAAKoD,MAAO,CAAEC,OAAM,eAAmBC,MAAOvC,EAAK2C,MAAMF,gBAAgBF,SAE3EV,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWC,IAAaY,YAG/Bf,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWC,IAAaa,aAC3BhB,EAAA5C,EAAAC,cAACkD,EAAAnD,EAAD,CAAKoD,MAAO,CAAEC,OAAM,QAAYC,MAAOvC,EAAK8C,KAAKL,gBAAgBF,WAjBzEvC,KAAA+C,KA2BS9C,EAAK,aA0BlB0B,EAAOvB,UAAY,CACjBwB,UAAWvB,IAAUE,QAGvBoB,EAAOqB,aAAe,CACpBpB,UAAS,IAGID,4CCrCF1B,EAAK,aAmBHgD,EA9CA,SAAAjC,GAAcA,EAAXhB,KAChB,OACE6B,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACE7B,MAAOA,EACPC,OAAQ,SAAAF,GAAI,OACV6B,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWmB,IAAaC,QAC3BtB,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWmB,IAAaE,OAC3BvB,EAAA5C,EAAAC,cAACkD,EAAAnD,EAAD,CAAKsD,MAAOvC,EAAKqD,IAAIZ,gBAAgBF,QACrCV,EAAA5C,EAAAC,cAAA,OAAK6C,UAAWmB,IAAaI,YAC7BzB,EAAA5C,EAAAC,cAACkD,EAAAnD,EAAD,CAAKsD,MAAOvC,EAAKuD,WAAWd,gBAAgBF,SAE9CV,EAAA5C,EAAAC,cAAA,uHAIA2C,EAAA5C,EAAAC,cAAA,gLAKA2C,EAAA5C,EAAAC,cAACsE,EAAA,aAAD,CAAcC,KAAK,0BAAnB,oBAlBNzD,KAAA0D,KCOET,UAAS,SAAAjC,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACb0B,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACE7B,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACV6B,EAAA5C,EAAAC,cAAA2C,EAAA5C,EAAA0E,SAAA,KACE9B,EAAA5C,EAAAC,cAAC+C,EAAD,CAAQL,UAAW5B,EAAK4D,KAAKC,aAAa1E,QAC1C0C,EAAA5C,EAAAC,cAAA,OACEmD,MAAO,CACLyB,WAAY,UACZC,WAAY,IAGdlC,EAAA5C,EAAAC,cAAA,YAAOiB,GACP0B,EAAA5C,EAAAC,cAACiE,EAAD,SApBRnD,KAAAgE,MA2BFf,EAAO7C,UAAY,CACjBD,SAAUE,IAAU4D,KAAKzD,YAGZyC,uGCnCf,SAASiB,EAATlD,GAA2D,IAA5CmD,EAA4CnD,EAA5CmD,YAAaC,EAA+BpD,EAA/BoD,KAAMC,EAAyBrD,EAAzBqD,KAAMC,EAAmBtD,EAAnBsD,SAAUnF,EAAS6B,EAAT7B,MACxCyE,EADiDW,EAAAvE,KACjD4D,KAcFY,EAAkBL,GAAeP,EAAKC,aAAaM,YAEzD,OACEM,EAAAxF,EAAAC,cAACwF,EAAAzF,EAAD,CACE0F,eAAgB,CACdP,QAEFjF,MAAOA,EACPyF,cAAa,QAAUhB,EAAKC,aAAa1E,MACzCkF,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS3F,GAEX,CACE4F,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASlB,EAAKC,aAAamB,QAE7B,CACEH,KAAI,gBACJC,QAAS3F,GAEX,CACE0F,KAAI,sBACJC,QAASN,IAGVS,OACCX,EAASY,OAAS,EACd,CACEL,KAAI,WACJC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,KAKhBH,EAAIlB,aAAe,CACjBoB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAI9D,UAAY,CACd+D,YAAa9D,IAAUE,OACvB6D,KAAM/D,IAAUE,OAChB8D,KAAMhE,IAAU+E,QAAQ/E,IAAUC,QAClCgE,SAAUjE,IAAU+E,QAAQ/E,IAAUE,QACtCpB,MAAOkB,IAAUE,OAAOC,YAGX0D","file":"component---src-pages-404-js-51ad520f7c499083dd08.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport headerStyles from \"./header.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\n\nconst Header = ({ siteTitle }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <header className={headerStyles.header}>\n          <Helmet>\n            <title>{siteTitle}</title> />\n          </Helmet>\n          <div>\n            <div className={headerStyles.upperDiv}>\n              <Img style={{ margin: `auto 0.5rem` }} fixed={data.logo.childImageSharp.fixed} />\n              <div style={{ borderLeft: `1px solid white` }}/>\n              <Img style={{ margin: `auto 0.5rem` }} fixed={data.image.childImageSharp.fixed} />\n            </div>\n            <div className={headerStyles.lowerDiv}>\n            </div>\n          </div>\n          <div className={headerStyles.centeredDiv}>\n            <Img style={{ margin: `auto` }} fixed={data.file.childImageSharp.fixed} />\n          </div>\n        </header>\n      )}\n    />\n  );\n};\n\n\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"uscientist-logo.png\" }) {\n      childImageSharp {\n        fixed(width: 120) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    image: file(relativePath: { eq: \"zooniverse-word-white.png\" }) {\n      childImageSharp {\n        fixed(height: 10) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    logo: file(relativePath: { eq: \"nsf.png\" }) {\n      childImageSharp {\n        fixed(height: 15) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\nimport footerStyles from \"./footer.module.css\"\n\nconst Layout = ({ data }) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => (\n        <div className={footerStyles.footer}>\n          <div className={footerStyles.logos}>\n            <Img fixed={data.nsf.childImageSharp.fixed} />\n            <div className={footerStyles.separator}/>\n            <Img fixed={data.zooniverse.childImageSharp.fixed} />\n          </div>\n          <span>\n            This material is based upon work supported by the national science\n            foundation under grant #AISL-1713425\n          </span>\n          <span>\n            The Zoonivese is a collaboration between the Adler Planetarium, The\n            University of Oxford, The University of Minnesota, and the broader\n            Citizen Science Alliance.\n          </span>\n          <OutboundLink href=\"https://zooniverse.org\">zooniverse.org</OutboundLink>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const query = graphql`\n  query {\n    zooniverse: file(relativePath: { eq: \"zooniverse-logo.png\" }) {\n      childImageSharp {\n        fixed(height: 18) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    nsf: file(relativePath: { eq: \"nsf.png\" }) {\n      childImageSharp {\n        fixed(height: 35) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            background: '#001133',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}